// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using CQRS.Domain.Exceptions;
using CQRS.Domain.Models.ValidationAtributes;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace CQRS.Domain.Entities
{
    /// <summary>
    /// Tabela do projeto inicial
    /// </summary>
    public class Todo {
        public const int MinLength = 6;
        public const int MaxLength = 50;

        [Key]
        public int Id { get; private set; }
        [StringLength(MaxLength)]
        public string Title { get; private set; }
        public bool Complete { get; private set; }
        [Column(TypeName = "datetime")]
        public DateTime? DateComplete { get; private set; }
        [StringLength(MaxLength)]
        public string Description { get; private set; }

        public Todo(string title, string description, bool complete = false) {

            IsValidTitle(title);
            IsValidDescription(description);

            Title = title;
            Complete = complete;
            DateComplete = Complete ? DateTime.Now : null;
            Description = description;
        }

        public static void IsValidTitle(string title) {
            if (string.IsNullOrEmpty(title))
                throw new DomainException(StringResources.this_field_is_required);
            if (title.Length < MinLength)
                throw new DomainException(StringResources.very_short_title);
            if(title.Length > MaxLength)
                throw new DomainException(StringResources.very_long_title);
        }

        public static void IsValidDescription(string description) {
            if (string.IsNullOrEmpty(description))
                throw new DomainException(StringResources.this_field_is_required);
            if (description.Length < MinLength)
                throw new DomainException(StringResources.very_short_description);
            if(description.Length > MaxLength)
                throw new DomainException(StringResources.very_long_descripition);
        }

        public Todo Completed() {
            Complete = !Complete;
            DateComplete = Complete ? DateTime.Now : null;
            return this;
        }

        public Todo UpdateDescription(string description) {
            IsValidDescription(description);
            Description = description;
            return this;
        }

    }

}